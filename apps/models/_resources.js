// Generated by CoffeeScript 1.3.3
/*
物理リソース処理モデル
@author shinokiwa
*/

var configs, fs, path, resources;

fs = require('fs');

path = require('path');

configs = require('./configs');

resources = function(src) {
  this.path = src;
  this.info = {
    path: path.join(this.path, configs.folders.info),
    exists: function() {
      return fs.existsSync(this.path);
    }
  };
  this.exists = function() {
    return fs.existsSync(this.path);
  };
  this.isDirectory = function() {
    if (this.exists()) {
      return fs.statSync(this.path).isDirectory();
    } else {
      return false;
    }
  };
  this.count = function() {
    var count, files;
    if (this.exists()) {
      if (this.isDirectory()) {
        files = fs.readdirSync(this.path);
        count = files.length;
        if (this.info.exists()) {
          count = count - 1;
        }
        return count;
      } else {
        return 1;
      }
    } else {
      return 0;
    }
  };
  this.make = function() {
    var oldMask;
    if (!this.exists()) {
      oldMask = process.umask(0);
      fs.mkdirSync(this.path);
      fs.chmodSync(this.path, 0x1ff);
      return process.umask(oldMask);
    }
  };
  this.move = function(target) {
    if (this.exists() && this.path !== target) {
      return fs.renameSync(this.path, target);
    }
  };
  this.remove = function() {
    var ret;
    if (this.exists()) {
      if (this.info.exists()) {
        fs.unlinkSync(this.info.path);
      }
      return ret = fs.rmdirSync(this.path);
    }
  };
  return this;
};

module.exports = resources;
